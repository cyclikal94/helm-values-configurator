{
  "$id": "file://matrix-stack/",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "object",
  "properties": {
    "serverName": {
      "type": "string",
      "description": "The server name of the Matrix Stack. This gets embedded in user IDs & room IDs. It can not change after the initial deployment."
    },
    "certManager": {
      "type": "object",
      "description": "CertManager Issuer to configure by default automatically on all ingresses. If configured, the chart will automatically generate the tlsSecret name for all ingresses.",
      "properties": {
        "clusterIssuer": {
          "type": "string",
          "description": "Name of the ClusterIssuer to use for issuing TLS certificates."
        },
        "issuer": {
          "type": "string",
          "description": "Name of the Issuer to use for issuing TLS certificates."
        }
      },
      "default": {},
      "additionalProperties": false,
      "oneOf": [
        {
          "required": [
            "clusterIssuer"
          ],
          "not": {
            "required": [
              "issuer"
            ]
          }
        },
        {
          "required": [
            "issuer"
          ],
          "not": {
            "required": [
              "clusterIssuer"
            ]
          }
        },
        {
          "maxProperties": 0
        }
      ]
    },
    "elementWeb": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether Element Web is deployed and served.",
          "default": true
        },
        "additional": {
          "type": "object",
          "description": "Arbitrary extra config to inject into Element Web's config.json. Each key is merged into the generated config.",
          "additionalProperties": {
            "type": "string"
          },
          "default": {}
        },
        "replicas": {
          "type": "integer",
          "description": "Number of Element Web replicas to start up.",
          "minimum": 1,
          "default": 1
        },
        "image": {
          "type": "object",
          "description": "Details of the container image for Element Web.",
          "required": [
            "repository"
          ],
          "properties": {
            "registry": {
              "type": "string",
              "description": "The host (and optional port) of the container image registry. Defaults to Docker Hub if not set.",
              "default": "docker.io"
            },
            "repository": {
              "type": "string",
              "description": "The path in the registry where the container image is located.",
              "default": "vectorim/element-web"
            },
            "tag": {
              "type": "string",
              "description": "The tag of the container image to use. Defaults to the Chart's appVersion if not set.",
              "default": "v1.11.101"
            },
            "digest": {
              "type": "string",
              "description": "Container digest to pull instead of tag/appVersion if set."
            },
            "pullPolicy": {
              "type": "string",
              "description": "Image pull policy: Always, IfNotPresent, or Never.",
              "enum": [
                "Always",
                "IfNotPresent",
                "Never"
              ]
            },
            "pullSecrets": {
              "type": "array",
              "description": "A list of image pull secrets to use for pulling this image.",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "default": []
            }
          },
          "additionalProperties": false
        },
        "ingress": {
          "type": "object",
          "description": "Ingress configuration for Element Web.",
          "properties": {
            "annotations": {
              "type": "object",
              "description": "Annotations to be added to this Ingress.",
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "default": {}
            },
            "host": {
              "type": "string",
              "description": "Hostname to use for this Ingress."
            },
            "className": {
              "type": "string",
              "description": "Ingress class name to use for this Ingress."
            },
            "tlsEnabled": {
              "type": "boolean",
              "description": "Whether TLS is enabled for this Ingress. Set to false to disable TLS.",
              "default": true
            },
            "tlsSecret": {
              "type": "string",
              "description": "Name of the Secret containing the TLS certificate and key for this Ingress."
            },
            "controllerType": {
              "type": "string",
              "description": "Optional type of ingress controller for automatic tweaks (e.g., ingress-nginx).",
              "enum": [
                "ingress-nginx"
              ]
            },
            "service": {
              "type": "object",
              "description": "How the Service behind this Ingress is constructed.",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "ClusterIP",
                    "NodePort",
                    "LoadBalancer"
                  ]
                }
              },
              "default": {},
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "labels": {
          "type": "object",
          "description": "Labels to add to all manifest for this component.",
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          },
          "default": {}
        },
        "extraEnv": {
          "type": "array",
          "description": "Additional environment variables to inject into the Element Web container.",
          "items": {
            "type": "object",
            "required": [
              "name",
              "value"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "default": []
        },
        "containersSecurityContext": {
          "type": "object",
          "description": "Container-level security context settings.",
          "properties": {
            "allowPrivilegeEscalation": {
              "type": "boolean",
              "description": "Controls whether a process can gain more privileges than its parent. Always true if container is privileged or has CAP_SYS_ADMIN.",
              "default": false
            },
            "capabilities": {
              "type": "object",
              "description": "Linux capabilities to add or drop.",
              "properties": {
                "add": {
                  "type": "array",
                  "description": "Privileges to add.",
                  "items": {
                    "type": "string"
                  }
                },
                "drop": {
                  "type": "array",
                  "description": "Privileges to drop.",
                  "items": {
                    "type": "string"
                  },
                  "default": [
                    "ALL"
                  ]
                }
              },
              "additionalProperties": false
            },
            "readOnlyRootFilesystem": {
              "type": "boolean",
              "description": "Whether to mount the container's root filesystem as read-only.",
              "default": true
            }
          },
          "additionalProperties": false
        },
        "podSecurityContext": {
          "type": "object",
          "description": "Pod-level security context settings.",
          "properties": {
            "fsGroup": {
              "type": "integer",
              "format": "int64",
              "description": "Supplemental GID applied to all containers in the pod, used for volume permissions.",
              "default": 10004
            },
            "runAsGroup": {
              "type": "integer",
              "format": "int64",
              "description": "GID to run the container entrypoint process.",
              "default": 10004
            },
            "runAsNonRoot": {
              "type": "boolean",
              "description": "Indicates the container must run as a non-root user; fails if UID 0.",
              "default": true
            },
            "runAsUser": {
              "type": "integer",
              "format": "int64",
              "description": "UID to run the container entrypoint process.",
              "default": 10004
            },
            "seccompProfile": {
              "type": "object",
              "description": "Seccomp profile settings.",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "RuntimeDefault",
                    "Unconfined",
                    "Localhost"
                  ],
                  "description": "Type of seccomp profile.",
                  "default": "RuntimeDefault"
                }
              },
              "additionalProperties": false
            },
            "supplementalGroups": {
              "type": "array",
              "description": "List of supplementary group IDs to apply to the first process in each container.",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "default": []
            }
          },
          "additionalProperties": false
        },
        "resources": {
          "type": "object",
          "description": "Compute resource requests and limits for Element Web pods.",
          "properties": {
            "limits": {
              "type": "object",
              "description": "Maximum compute resources allowed.",
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string",
                    "pattern": "..."
                  }
                ]
              },
              "default": {
                "memory": "200Mi"
              }
            },
            "requests": {
              "type": "object",
              "description": "Minimum compute resources required.",
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string",
                    "pattern": "..."
                  }
                ]
              },
              "default": {
                "memory": "50Mi",
                "cpu": "50m"
              }
            }
          },
          "additionalProperties": false
        },
        "serviceAccount": {
          "type": "object",
          "description": "ServiceAccount configuration for Element Web.",
          "properties": {
            "create": {
              "type": "boolean",
              "description": "Whether to create a ServiceAccount for this component.",
              "default": true
            },
            "name": {
              "type": "string",
              "description": "Name to assign to the ServiceAccount; autogenerated if unset.",
              "default": ""
            },
            "annotations": {
              "type": "object",
              "description": "Annotations to add to the ServiceAccount.",
              "additionalProperties": {
                "type": "string"
              },
              "default": {}
            }
          },
          "additionalProperties": false
        },
        "tolerations": {
          "type": "array",
          "description": "Pod tolerations for matching node taints; controls eviction behavior.",
          "items": {
            "type": "object",
            "properties": {
              "effect": {
                "type": "string",
                "description": "Taint effect to match."
              },
              "key": {
                "type": "string",
                "description": "Taint key to match."
              },
              "operator": {
                "type": "string",
                "description": "Operator for matching (Exists or Equal)."
              },
              "value": {
                "type": "string",
                "description": "Taint value to match."
              },
              "tolerationSeconds": {
                "type": "number",
                "description": "Time in seconds the pod tolerates a NoExecute taint."
              }
            },
            "additionalProperties": false
          },
          "default": []
        },
        "topologySpreadConstraints": {
          "type": "array",
          "description": "Constraints to control pod distribution across topology domains.",
          "items": {
            "type": "object",
            "required": [
              "maxSkew",
              "topologyKey"
            ],
            "properties": {
              "maxSkew": {
                "type": "integer",
                "description": "Maximum skew allowed."
              },
              "topologyKey": {
                "type": "string",
                "description": "Topology key to spread across."
              }
            },
            "additionalProperties": false
          },
          "default": []
        },
        "livenessProbe": {
          "type": "object",
          "description": "Configuration for the liveness probe.",
          "properties": {
            "failureThreshold": {
              "type": [
                "integer",
                "null"
              ],
              "description": "Consecutive failures before marking failed.",
              "default": 3
            },
            "initialDelaySeconds": {
              "type": [
                "integer",
                "null"
              ],
              "description": "Seconds before starting the probe.",
              "default": 0
            },
            "periodSeconds": {
              "type": [
                "integer",
                "null"
              ],
              "description": "Interval between probes.",
              "default": 10
            },
            "successThreshold": {
              "type": [
                "integer",
                "null"
              ],
              "description": "Consecutive successes after failure.",
              "default": 1
            },
            "timeoutSeconds": {
              "type": [
                "integer",
                "null"
              ],
              "description": "Probe timeout seconds.",
              "default": 1
            }
          },
          "additionalProperties": false
        },
        "readinessProbe": {
          "type": "object",
          "description": "Configuration for the readiness probe.",
          "properties": {
            "failureThreshold": {
              "type": [
                "integer",
                "null"
              ],
              "description": "Consecutive failures before marking unready.",
              "default": 3
            },
            "initialDelaySeconds": {
              "type": [
                "integer",
                "null"
              ],
              "description": "Seconds before starting the probe.",
              "default": 0
            },
            "periodSeconds": {
              "type": [
                "integer",
                "null"
              ],
              "description": "Interval between probes.",
              "default": 3
            },
            "successThreshold": {
              "type": [
                "integer",
                "null"
              ],
              "description": "Consecutive successes after failure.",
              "default": 1
            },
            "timeoutSeconds": {
              "type": [
                "integer",
                "null"
              ],
              "description": "Probe timeout seconds.",
              "default": 1
            }
          },
          "additionalProperties": false
        },
        "startupProbe": {
          "type": "object",
          "description": "Configuration for the startup probe.",
          "properties": {
            "failureThreshold": {
              "type": [
                "integer",
                "null"
              ],
              "description": "Consecutive failures before marking startup failed.",
              "default": 4
            },
            "initialDelaySeconds": {
              "type": [
                "integer",
                "null"
              ],
              "description": "Seconds before starting the probe.",
              "default": 0
            },
            "periodSeconds": {
              "type": [
                "integer",
                "null"
              ],
              "description": "Interval between probes.",
              "default": 3
            },
            "successThreshold": {
              "type": [
                "integer",
                "null"
              ],
              "description": "Consecutive successes after failure.",
              "default": 1
            },
            "timeoutSeconds": {
              "type": [
                "integer",
                "null"
              ],
              "description": "Probe timeout seconds.",
              "default": 1
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "wellKnownDelegation": {
      "type": "object",
      "description": "Configuration for well-known delegation service.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether the well-known delegation service is enabled.",
          "default": true
        },
        "labels": {
          "type": "object",
          "description": "Labels to add to all manifests for this component.",
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          },
          "default": {}
        },
        "ingress": {
          "type": "object",
          "description": "Ingress configuration for well-known delegation.",
          "properties": {
            "annotations": {
              "type": "object",
              "description": "Annotations to add to this Ingress.",
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "default": {}
            },
            "host": {
              "type": "string",
              "description": "Hostname for this Ingress."
            },
            "className": {
              "type": "string",
              "description": "Ingress class name."
            },
            "tlsEnabled": {
              "type": "boolean",
              "description": "Disable TLS by setting to false.",
              "default": true
            },
            "tlsSecret": {
              "type": "string",
              "description": "Secret name for TLS certificate and key."
            },
            "service": {
              "type": "object",
              "description": "Service configuration for this Ingress.",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "ClusterIP",
                    "NodePort",
                    "LoadBalancer"
                  ]
                }
              },
              "default": {},
              "additionalProperties": false
            },
            "controllerType": {
              "type": "string",
              "description": "Ingress controller tweaks (e.g., ingress-nginx)",
              "enum": [
                "ingress-nginx"
              ]
            }
          },
          "additionalProperties": false
        },
        "baseDomainRedirect": {
          "type": "object",
          "description": "Redirect base domain to Element Web's ingress if deployed.",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Whether to redirect base domain to Element Web.",
              "default": true
            },
            "url": {
              "type": "string",
              "description": "Override redirect URL here.",
              "default": ""
            }
          },
          "additionalProperties": false
        },
        "additional": {
          "type": "object",
          "description": "Additional JSON configuration strings for well-known static files.",
          "properties": {
            "client": {
              "type": "string",
              "description": "Client well-known JSON.",
              "default": "{}"
            },
            "element": {
              "type": "string",
              "description": "Element well-known JSON.",
              "default": "{}"
            },
            "server": {
              "type": "string",
              "description": "Server well-known JSON.",
              "default": "{}"
            },
            "support": {
              "type": "string",
              "description": "Support well-known JSON.",
              "default": "{}"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false
}